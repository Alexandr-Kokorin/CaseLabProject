services:
  postgresql:
    image: postgres:16
    container_name: $POSTGRES_CONTAINER_NAME
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - postgresql:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 3s
      timeout: 5s

  liquibase-migrations:
    image: liquibase/liquibase:4.25
    container_name: liquibase
    restart: on-failure
    depends_on:
      postgresql:
        condition: service_healthy
    command:
      - --changelog-file=db.changelog-master.yml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://${POSTGRES_CONTAINER_NAME}:5432/${POSTGRES_DB}
      - --username=${POSTGRES_USER}
      - --password=${POSTGRES_PASSWORD}
      - update
    volumes:
      - ../migrations/db/changelog:/liquibase/changelog/
    networks:
      - backend

  minio:
    image: minio/minio:latest
    command: server --console-address ":9090" /data/
    ports:
      - "9000:9000"
      - "9090:9090"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-storage:/data:rw
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      backend:
        aliases:
          - minio

  kafka:
    image: &kafka-image bitnami/kafka
    container_name: kafka
    ports:
      - '9094:9094'
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_NUM_PARTITIONS: 1
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server=localhost:9092", "--list" ]
      start_period: 15s
      interval: 10s
    networks:
      - backend

  init-kafka:
    image: *kafka-image
    container_name: init-kafka
    working_dir: /opt/bitnami/kafka/bin
    entrypoint: /bin/bash
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - backend
    command: |
      -c "
      kafka-topics.sh --create --if-not-exists --topic event-topic --bootstrap-server kafka:9092
      kafka-topics.sh --describe --bootstrap-server kafka:9092
      "


volumes:
  postgresql: { }
  minio-storage:

networks:
  backend: { }

